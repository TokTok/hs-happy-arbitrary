load("@rules_haskell//haskell:defs.bzl", "haskell_library")
load("//third_party/haskell/alex:build_defs.bzl", "alex_lexer")
load("//third_party/haskell/happy:build_defs.bzl", "happy_parser")
load("//third_party/haskell/hspec-discover:build_defs.bzl", "hspec_test")
load("//tools/project:build_defs.bzl", "project")

project(license = "gpl3-https")

haskell_library(
    name = "ast",
    srcs = ["src/Language/Happy/Ast.hs"],
    src_strip_prefix = "src",
    tags = ["no-cross"],
    visibility = ["//hs-happy-arbitrary:__subpackages__"],
    deps = [
        "//third_party/haskell:aeson",
        "//third_party/haskell:base",
        "//third_party/haskell:data-fix",
        "//third_party/haskell:transformers-compat",
    ],
)

alex_lexer(
    name = "Lexer",
    src = "src/Language/Happy/Lexer.x",
)

haskell_library(
    name = "lexer",
    srcs = [
        "src/Language/Happy/Tokens.hs",
        ":Lexer",
    ],
    src_strip_prefix = "src",
    tags = ["no-cross"],
    visibility = ["//hs-happy-arbitrary:__subpackages__"],
    deps = [
        "//third_party/haskell:aeson",
        "//third_party/haskell:array",
        "//third_party/haskell:base",
        "//third_party/haskell:bytestring",
        "//third_party/haskell:text",
    ],
)

happy_parser(
    name = "Parser",
    src = "src/Language/Happy/Parser.y",
)

haskell_library(
    name = "parser",
    srcs = [":Parser"],
    extra_srcs = ["src/Language/Happy/Parser.y"],
    ghcopts = ["-DSOURCE=\"$(location src/Language/Happy/Parser.y)\""],
    src_strip_prefix = "src",
    tags = ["no-cross"],
    visibility = ["//hs-happy-arbitrary:__subpackages__"],
    deps = [
        ":ast",
        ":lexer",
        "//third_party/haskell:aeson",
        "//third_party/haskell:array",
        "//third_party/haskell:base",
        "//third_party/haskell:bytestring",
        "//third_party/haskell:data-fix",
        "//third_party/haskell:file-embed",
        "//third_party/haskell:recursion-schemes",
        "//third_party/haskell:text",
        "//third_party/haskell:transformers-compat",
    ],
)

haskell_library(
    name = "hs-happy-arbitrary",
    srcs = glob(
        ["src/**/*.*hs"],
        exclude = [
            "src/Language/Happy/Tokens.hs",
            "src/Language/Happy/Ast.hs",
        ],
    ),
    src_strip_prefix = "src",
    tags = ["no-cross"],
    version = "0.0.1",
    visibility = ["//visibility:public"],
    deps = [
        ":ast",
        ":lexer",
        ":parser",
        "//third_party/haskell:QuickCheck",
        "//third_party/haskell:aeson",
        "//third_party/haskell:array",
        "//third_party/haskell:base",
        "//third_party/haskell:bytestring",
        "//third_party/haskell:containers",
        "//third_party/haskell:data-fix",
        "//third_party/haskell:extra",
        "//third_party/haskell:file-embed",
        "//third_party/haskell:text",
        "//third_party/haskell:transformers-compat",
    ],
)

hspec_test(
    name = "testsuite",
    size = "small",
    deps = [
        ":ast",
        ":hs-happy-arbitrary",
        ":lexer",
        ":parser",
        "//third_party/haskell:QuickCheck",
        "//third_party/haskell:base",
        "//third_party/haskell:bytestring",
        "//third_party/haskell:groom",
        "//third_party/haskell:hspec",
        "//third_party/haskell:text",
    ],
)
